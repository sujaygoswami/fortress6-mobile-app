{"version":3,"sources":["webpack:///./src/app/career/career.module.ts","webpack:///./src/app/career/career.page.html","webpack:///./src/app/career/career.page.scss","webpack:///./src/app/career/career.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACmB;AACX;AAEV;AAEF;AAE3C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uDAAU;KACtB;CACF,CAAC;AAYF;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAV5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,kEAAmB;gBACnB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,uDAAU,CAAC;SAC3B,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;AC1B7B,gNAAgN,uBAAuB,IAAI,wBAAwB,mBAAmB,qBAAqB,kOAAkO,wBAAwB,qCAAqC,qBAAqB,qPAAqP,eAAe,28BAA28B,sBAAsB,gwBAAgwB,sBAAsB,6uBAA6uB,sBAAsB,0uBAA0uB,sBAAsB,6b;;;;;;;;;;;ACA7lI,+DAA+D,uI;;;;;;;;;;;;;;;;;;;;ACAb;AACU;AACqB;AACxC;AAOzC;IAKE,oBAAoB,YAA2B,EAAS,WAAwB,EAAU,MAAc;QAApF,iBAAY,GAAZ,YAAY,CAAe;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAgBxG,wBAAmB,GAAG;YAEpB,WAAW,EAAE;gBACX,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,mBAAmB,EAAE;aACnD;YACD,UAAU,EAAE;gBACV,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,wBAAwB,EAAE;aACxD;YACD,OAAO,EAAE;gBACP,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,oBAAoB,EAAE;gBACnD,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,6BAA6B,EAAE;aAC5D;YACD,OAAO,EAAE;gBACP,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,wBAAwB,EAAE;aACxD;SACF,CAAC;QAOF,gBAAW,GAAG;YACb;gBACG,KAAK,EAAE,kBAAkB;gBACzB,IAAI,EAAE,ukBAAukB;aAC9kB;SACF,CAAC;IA3C0G,CAAC;IAE7G,6BAAQ,GAAR;QACC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAE5C,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;gBAC5C,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,OAAO,CAAC,iDAAiD,CAAC;aACtE,CAAC,CAAC;YACH,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAChD,CAAC,CAAC;IACL,CAAC;IAoBD,6BAAQ,GAAR,UAAS,MAAM;QACb,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAC7C,CAAC;IAzCU,UAAU;QALtB,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,4FAAiC;;SAElC,CAAC;+EAMkC,uEAAa,EAAsB,0DAAW,EAAkB,sDAAM;OAL7F,UAAU,CAkDtB;IAAD,iBAAC;CAAA;AAlDsB","file":"career-career-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CareerPage } from './career.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CareerPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [CareerPage]\r\n})\r\nexport class CareerPageModule {}\r\n","module.exports = \"<ion-content class=\\\"inner-page\\\">\\r\\n<div class=\\\"logo-holder\\\">\\r\\n\\t<div class=\\\"service-menu left\\\">\\r\\n\\t\\t<a *ngFor=\\\"let constantsvalue of constantpage.constantsvaluesleft\\\" href=\\\"{{constantsvalue.action}}: {{constantsvalue.content}}\\\"><i class=\\\"fa {{constantsvalue.icon}}\\\"></i></a>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"logo\\\"><img src=\\\"assets/images/company-logo.png\\\"></div>\\r\\n\\t<div class=\\\"service-menu right\\\">\\r\\n\\t\\t<a *ngFor=\\\"let constantsvalue of constantpage.constantsvaluesright\\\" href=\\\"{{constantsvalue.content}}\\\" target=\\\"_blank\\\"><i class=\\\"fa {{constantsvalue.icon}}\\\"></i></a>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"main-content-wrap\\\">\\r\\n\\t<div class=\\\"main-wrap\\\">\\r\\n\\t\\t<div class=\\\"entry element-gap element-gap-default\\\" *ngFor=\\\"let content of pageContent\\\">\\r\\n\\t\\t\\t<h1 class=\\\"page-title\\\">{{content.title}}</h1>\\r\\n\\t\\t\\t<div [innerHTML]=\\\"content.text\\\"></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"career-form-module entry\\\">\\r\\n\\r\\n\\t\\t\\t<h1>Get In Touch</h1>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t<form [formGroup]=\\\"validations_form\\\"  (ngSubmit)=\\\"onSubmit(validations_form.value)\\\" class=\\\"site-form\\\">\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"field-group\\\">\\r\\n\\t\\t\\t\\t\\t<ion-item>\\r\\n\\t\\t\\t\\t\\t\\t<ion-label position=\\\"floating\\\" color=\\\"primary\\\">First Name</ion-label>\\r\\n\\t\\t\\t\\t\\t\\t<ion-input type=\\\"text\\\" formControlName=\\\"firstname\\\"></ion-input>\\r\\n\\t\\t\\t\\t\\t</ion-item>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"validation-errors\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-container *ngFor=\\\"let validation of validation_messages.firstname\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('firstname').hasError(validation.type) && (validations_form.get('firstname').dirty || validations_form.get('firstname').touched)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"field-group\\\">\\r\\n\\t\\t\\t\\t\\t<ion-item>\\r\\n\\t\\t\\t\\t\\t\\t<ion-label position=\\\"floating\\\" color=\\\"primary\\\">Last name</ion-label>\\r\\n\\t\\t\\t\\t\\t\\t<ion-input type=\\\"text\\\" formControlName=\\\"lastname\\\"></ion-input>\\r\\n\\t\\t\\t\\t\\t</ion-item>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"validation-errors\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-container *ngFor=\\\"let validation of validation_messages.lastname\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('lastname').hasError(validation.type) && (validations_form.get('lastname').dirty || validations_form.get('lastname').touched)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"field-group\\\">\\r\\n\\t\\t\\t\\t\\t<ion-item>\\r\\n\\t\\t\\t\\t\\t\\t<ion-label position=\\\"floating\\\" color=\\\"primary\\\">Email</ion-label>\\r\\n\\t\\t\\t\\t\\t\\t<ion-input type=\\\"text\\\" formControlName=\\\"email\\\"></ion-input>\\r\\n\\t\\t\\t\\t\\t</ion-item>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"validation-errors\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('email').hasError(validation.type) && (validations_form.get('email').dirty || validations_form.get('email').touched)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"field-group\\\">\\r\\n\\t\\t\\t\\t\\t<ion-item>\\r\\n\\t\\t\\t\\t\\t\\t<ion-label position=\\\"floating\\\" color=\\\"primary\\\">Your Query</ion-label>\\r\\n\\t\\t\\t\\t\\t\\t<ion-textarea formControlName=\\\"query\\\"></ion-textarea>\\r\\n\\t\\t\\t\\t\\t</ion-item>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"validation-errors\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-container *ngFor=\\\"let validation of validation_messages.query\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('query').hasError(validation.type) && (validations_form.get('query').dirty || validations_form.get('query').touched)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ validation.message }}\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<ion-button color=\\\"primary\\\" class=\\\"submit-btn\\\" expand=\\\"full\\\" type=\\\"submit\\\" [disabled]=\\\"!validations_form.valid\\\">Submit</ion-button>\\r\\n\\t\\t\\t</form>\\r\\n\\t\\t\\t\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n<div class=\\\"bootom-listing-nav\\\"><i class=\\\"fa fa-th\\\" routerLink=\\\"/navigation-panel\\\"></i></div>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhcmVlci9jYXJlZXIucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ConstantsPage } from '../constants/constants.page';\r\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-career',\r\n  templateUrl: './career.page.html',\r\n  styleUrls: ['./career.page.scss'],\r\n})\r\nexport class CareerPage implements OnInit {\r\n\r\n\r\n\tvalidations_form: FormGroup;\r\n\r\n  constructor(private constantpage: ConstantsPage, public formBuilder: FormBuilder, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  \tthis.validations_form = this.formBuilder.group({\r\n      \r\n      firstname: new FormControl('', Validators.required),\r\n      lastname: new FormControl('', Validators.required),\r\n      email: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])),\r\n      query: new FormControl('', Validators.required),\r\n    });\r\n  }\r\n\r\n\r\n  validation_messages = {\r\n   \r\n    'firstname': [\r\n      { type: 'required', message: 'Name is required.' }\r\n    ],\r\n    'lastname': [\r\n      { type: 'required', message: 'Last name is required.' }\r\n    ],\r\n    'email': [\r\n      { type: 'required', message: 'Email is required.' },\r\n      { type: 'pattern', message: 'Please wnter a valid email.' }\r\n    ],\r\n    'query': [\r\n      { type: 'required', message: 'Let us know your query' },\r\n    ],\r\n  };\r\n\r\n  onSubmit(values){\r\n    console.log(values);\r\n    this.router.navigate([\"/contact-suceess\"]);\r\n  }\r\n\r\n  pageContent = [\r\n  \t{\r\n      title: \"CURRENT OPENINGS\",\r\n      text: \"<p>Are you passionate, energetic and a team player? If you have all three skills, Fortress6 Technologies is offering you a platform where you can get the opportunity to work with the best minds of the industry. With industry standard compensation, world-class infrastructure and an effective team of management that believes in nurturing talents, you will get the best environment to work here.If you wish to be a part of our team, please follow our current openings:</p><ul><li>PHP Developer - Mysql/javascript/jquery</li><li>UI Developer - Angularjs/html/css/javascript</li></ul>\",\r\n    }\r\n  ];\r\n\r\n}\r\n"],"sourceRoot":""}